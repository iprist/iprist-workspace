# Copyright (c) IPRist Development Team
# Distributed under the terms of the Modified BSD License.
volumes:
  certs: {}
  esdata01: {}
  wvdata01: {}

services:
  setup-es-cluster:
    container_name: setup-es-cluster
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: es01\n"\
          "    dns:\n"\
          "      - es01\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://es01:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    networks:
      - iprist-workspace-network

  es01:
    container_name: es01
    restart: unless-stopped
    depends_on:
      setup-es-cluster:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es01/es01.key
      - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es01/es01.key
      - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - iprist-workspace-network

  wv01:
    container_name: wv01
    restart: unless-stopped
    image: semitechnologies/weaviate:1.25.11
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8880"
      - --scheme
      - http
    ports:
      - 8880:8880
      - 50051:50051
    volumes:
      - wvdata01:/var/lib/weaviate
    environment:
      CLUSTER_HOSTNAME: "wv01"
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      ENABLE_MODULES: "text2vec-contextionary"
      DEFAULT_VECTORIZER_MODULE: "text2vec-contextionary"
      CONTEXTIONARY_URL: wvcontextionary01:50052
    networks:
      - iprist-workspace-network

  wvcontextionary01:
    container_name: wvcontextionary01
    restart: unless-stopped
    image: semitechnologies/contextionary:en0.16.0-v1.2.1
    environment:
      OCCURRENCE_WEIGHT_LINEAR_FACTOR: 0.75
      EXTENSIONS_STORAGE_MODE: weaviate
      EXTENSIONS_STORAGE_ORIGIN: http://wv01:8880
      NEIGHBOR_OCCURRENCE_IGNORE_PERCENTILE: 5
      ENABLE_COMPOUND_SPLITTING: "false"
      SERVER_PORT: 50052
    ports:
      - 50052:50052
    networks:
      - iprist-workspace-network

  notebook:
    container_name: notebook
    restart: unless-stopped
    image: ghcr.io/iprist/notebook:2024-09-09
    user: "jovyan:users"
    volumes:
      - ./data:/home/jovyan/data
      - ./images:/home/jovyan/images
      - ./work:/home/jovyan/work
    environment:
      - JUPYTER_PORT=10000
    ports:
      - 10000:10000
    networks:
      - iprist-workspace-network

networks:
  iprist-workspace-network:
    driver: bridge
